@page "/signup"
@using TulipBlazorUI.Models
@inject NavigationManager NavigationManager
@inject IAPIHelper ApiHelper

<EditForm Model="@registerModel" OnValidSubmit="@RegisterUser">
    <DataAnnotationsValidator />
    @*<ValidationSummary />*@
    <div>
        <br /><br /><br /><br /><br />
    </div>
    <div>
        <h3 style="font-weight:bold; color:purple">Tulip Store Login</h3>
    </div>
    <div>
        <br />
    </div>
    <div class="col-12 row">
        <input class="form-control col-12" @bind="@registerModel.FirstName" placeholder="first name" />
        &nbsp;<ValidationMessage For="@(() => registerModel.FirstName)" />
    </div>
    <br />
    <div class="col-12 row">
        <input class="form-control col-12" @bind="@registerModel.LastName" placeholder="last name" />
        &nbsp;<ValidationMessage For="@(() => registerModel.LastName)" />
    </div>
    <br />
    <div class="col-12 row">
        <input class="form-control col-12" @bind="@registerModel.EmailAddress" placeholder="username" />
        &nbsp;<ValidationMessage For="@(() => registerModel.EmailAddress)" />
    </div>
    <br />
    <div class="col-12 row">
        <input type="password"
               class="form-control col-12"
               @bind="@registerModel.Password" placeholder="password" />
        &nbsp;<ValidationMessage For="@(() => registerModel.Password)" />
    </div>
    <br />
    <div class="col-12 row">
        <input type="password"
               class="form-control col-12"
               @bind="@registerModel.ConfirmPassword" placeholder="confirm password" />
        &nbsp;<ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
    </div>
    <br />
    <div class="col-12 row">
        <span class="col-12"></span>
        <input type="submit" class="form-control col-6 btn btn-primary" value="Sign Up" />
        <a href="/login" class="col-3">Login</a>
    </div>
    <div class="col-12 row" style="text-align:left; font-weight:bold">
        <h6 class="col-12" style="color:red">@RegisterMessage</h6>
    </div>
</EditForm>


@code {
    private UserBlazorModel registerModel;
    public string RegisterMessage { get; set; }

    protected override Task OnInitializedAsync()
    {
        registerModel = new UserBlazorModel();
        return base.OnInitializedAsync();
    }

    private async Task<bool> RegisterUser()
    {
        // Call ApiHelper
        try
        {


            RegisterModel register = new RegisterModel
            {
                Email = registerModel.EmailAddress,
                Password = registerModel.Password,
                ConfirmPassword = registerModel.ConfirmPassword
            };

            string createSuccess = await ApiHelper.RegisterUser(register);

            if (createSuccess == "success")
            {
                var result = await ApiHelper.Authenticate(registerModel.EmailAddress,
                    registerModel.Password);

                UserModel user = new UserModel();
                List<string> UInfor = await ApiHelper.GetUserId(result.Access_Token);
                user.Id = UInfor[0];
                user.FirstName = registerModel.FirstName;
                user.LastName = registerModel.LastName;
                user.EmailAddress = registerModel.EmailAddress;

                await ApiHelper.PostUserInfo(user);
            }
            NavigationManager.NavigateTo("/");

        }
        catch (Exception ex)
        {
            RegisterMessage = ex.Message.Replace(".","\n");
        }

        return await Task.FromResult(true);
    }
}
